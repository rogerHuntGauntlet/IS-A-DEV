document.addEventListener('DOMContentLoaded', function() {
    // Initialize Theme
    initializeTheme();
    
    // Initialize Search and Filters
    initializeSearch();
    
    // Initialize Posts Loading
    initializePosts();
    
    // Initialize Lightbox
    initializeLightbox();
    
    // Initialize Back to Top
    initializeBackToTop();
    
    // Initialize Comments
    initializeComments();
});

function initializeTheme() {
    const themeToggle = document.getElementById('themeToggle');
    if (!themeToggle) return;

    // Set initial theme from localStorage
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);
    themeToggle.innerHTML = savedTheme === 'dark' ? '☀️' : '🌑';
    themeToggle.setAttribute('aria-checked', savedTheme === 'dark');

    themeToggle.addEventListener('click', () => {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        themeToggle.innerHTML = newTheme === 'dark' ? '☀️' : '🌑';
        themeToggle.setAttribute('aria-checked', newTheme === 'dark');
    });
}

function initializeSearch() {
    const searchInput = document.querySelector('.search-input');
    const searchClear = document.querySelector('.search-clear');
    const categoryFilter = document.getElementById('categoryFilter');
    const dateFilter = document.getElementById('dateFilter');
    const contentFilter = document.getElementById('contentFilter');
    const resetFiltersBtn = document.querySelector('.reset-filters-btn');

    if (!searchInput || !searchClear || !categoryFilter || !dateFilter || !contentFilter || !resetFiltersBtn) return;

    let searchTimeout;

    searchInput.addEventListener('input', () => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(performSearch, 300);
        searchClear.style.display = searchInput.value ? 'block' : 'none';
    });

    searchClear.addEventListener('click', () => {
        searchInput.value = '';
        searchClear.style.display = 'none';
        performSearch();
    });

    categoryFilter.addEventListener('change', performSearch);
    dateFilter.addEventListener('change', performSearch);
    contentFilter.addEventListener('change', performSearch);
    resetFiltersBtn.addEventListener('click', resetFilters);
}

function initializePosts() {
    const postsContainer = document.getElementById('posts-container');
    const loadingIndicator = document.getElementById('loading-indicator');
    const loadMoreBtn = document.getElementById('load-more');
    
    if (!postsContainer || !loadingIndicator || !loadMoreBtn) return;

    let currentPage = 1;
    let isLoading = false;

    async function loadPosts(page = 1) {
        if (isLoading) return;

        isLoading = true;
        loadingIndicator.style.display = 'block';
        loadMoreBtn.style.display = 'none';

        try {
            const response = await fetch(`/data/blog-posts.json?page=${page}`);
            if (!response.ok) throw new Error('Failed to load posts');

            const data = await response.json();
            data.posts.forEach(post => {
                const postElement = createPostElement(post);
                postsContainer.appendChild(postElement);
            });

            currentPage = page;
            if (currentPage * data.pagination.per_page < data.pagination.total_posts) {
                loadMoreBtn.style.display = 'block';
            }

            initializeLightboxForNewImages();
        } catch (error) {
            showError('Failed to load posts. Please try again later.');
            console.error('Error loading posts:', error);
        } finally {
            isLoading = false;
            loadingIndicator.style.display = 'none';
        }
    }

    loadMoreBtn.addEventListener('click', () => loadPosts(currentPage + 1));
    loadPosts(); // Initial load
}

function initializeLightbox() {
    const lightbox = document.getElementById('imageLightbox');
    if (!lightbox) return;

    const lightboxImage = lightbox.querySelector('.lightbox-image');
    const lightboxCaption = lightbox.querySelector('.lightbox-caption');
    const lightboxClose = lightbox.querySelector('.lightbox-close');
    const lightboxPrev = lightbox.querySelector('.lightbox-prev');
    const lightboxNext = lightbox.querySelector('.lightbox-next');
    const lightboxLoading = lightbox.querySelector('.lightbox-loading');

    let currentImageIndex = 0;
    let blogImages = document.querySelectorAll('.blog-image');

    function showLightbox(image) {
        lightboxLoading.style.display = 'block';
        lightboxImage.style.display = 'none';
        lightboxImage.src = image.src;
        lightboxCaption.textContent = image.nextElementSibling?.textContent || image.alt;
        lightbox.style.display = 'flex';
        
        lightboxImage.onload = () => {
            lightboxLoading.style.display = 'none';
            lightboxImage.style.display = 'block';
        };
        
        updateNavigation();
    }

    function updateNavigation() {
        lightboxPrev.style.display = currentImageIndex > 0 ? 'block' : 'none';
        lightboxNext.style.display = currentImageIndex < blogImages.length - 1 ? 'block' : 'none';
    }

    // Event Listeners
    lightboxClose.addEventListener('click', () => {
        lightbox.style.display = 'none';
        lightboxImage.src = '';
    });

    lightboxPrev.addEventListener('click', () => {
        if (currentImageIndex > 0) {
            currentImageIndex--;
            showLightbox(blogImages[currentImageIndex]);
        }
    });

    lightboxNext.addEventListener('click', () => {
        if (currentImageIndex < blogImages.length - 1) {
            currentImageIndex++;
            showLightbox(blogImages[currentImageIndex]);
        }
    });

    // Initialize images
    function initializeLightboxForNewImages() {
        blogImages = document.querySelectorAll('.blog-image');
        blogImages.forEach((image, index) => {
            if (!image.hasAttribute('data-lightbox-initialized')) {
                image.style.cursor = 'zoom-in';
                image.addEventListener('click', () => {
                    currentImageIndex = index;
                    showLightbox(image);
                });
                image.setAttribute('data-lightbox-initialized', 'true');
            }
        });
    }

    // Make function available globally
    window.initializeLightboxForNewImages = initializeLightboxForNewImages;
    initializeLightboxForNewImages();
}

function initializeBackToTop() {
    const backToTop = document.getElementById('backToTop');
    if (!backToTop) return;

    window.addEventListener('scroll', () => {
        backToTop.classList.toggle('visible', window.scrollY > 500);
    });

    backToTop.addEventListener('click', () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
}

function initializeComments() {
    window.disqus_config = function() {
        this.page.url = window.location.href;
        this.page.identifier = window.location.pathname;
    };

    const script = document.createElement('script');
    script.src = 'https://ai-engineer-journey.disqus.com/embed.js';
    script.setAttribute('data-timestamp', +new Date());
    (document.head || document.body).appendChild(script);

    // Load comment counts
    const countScript = document.createElement('script');
    countScript.src = 'https://ai-engineer-journey.disqus.com/count.js';
    countScript.id = 'dsq-count-scr';
    (document.head || document.body).appendChild(countScript);
}

// Utility Functions
function showError(message) {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'error-message';
    errorDiv.textContent = message;
    document.getElementById('posts-container')?.appendChild(errorDiv);
    setTimeout(() => errorDiv.remove(), 5000);
}

function createPostElement(post) {
    const article = document.createElement('article');
    article.className = 'blog-post';
    article.dataset.category = post.category;
    article.dataset.date = post.date;

    let imagesHTML = '';
    if (post.images && post.images.length > 0) {
        imagesHTML = `<div class="blog-images">${
            post.images.map(img => `
                <div class="blog-image-container">
                    <div class="image-placeholder">Loading image...</div>
                    <img src="${img.src}" 
                         alt="${img.alt}" 
                         class="blog-image loading" 
                         loading="lazy" 
                         width="800" 
                         height="600" 
                         onload="this.classList.remove('loading'); this.previousElementSibling.style.display='none';">
                    <div class="image-caption">${img.caption}</div>
                </div>
            `).join('')
        }</div>`;
    }

    let sectionsHTML = '';
    if (post.sections && post.sections.length > 0) {
        sectionsHTML = post.sections.map(section => `
            <h3>${section.title}</h3>
            <p>${section.content}</p>
            ${section.list ? `<ul>${section.list.map(item => `<li>${item}</li>`).join('')}</ul>` : ''}
        `).join('');
    }

    article.innerHTML = `
        <h2>${post.title}</h2>
        <div class="post-meta">
            <span class="post-date">${post.date}</span>
            <span class="post-category">${getCategoryLabel(post.category)}</span>
        </div>
        <p>${post.content}</p>
        ${imagesHTML}
        ${sectionsHTML}
        <div class="comments-section">
            <h3>Comments</h3>
            <div id="disqus_thread"></div>
        </div>
    `;

    return article;
}

function getCategoryLabel(category) {
    const labels = {
        'development': '💻 Development',
        'ai': '🤖 AI & ML',
        'gauntlet': '⚡ Gauntlet Program',
        'projects': '🚀 Projects',
        'events': '📅 Events & Updates'
    };
    return labels[category] || category;
}

// Initialize overlay functionality
window.showOverlay = () => {
    document.getElementById('downloadOverlay').style.display = 'flex';
};

window.closeOverlay = () => {
    document.getElementById('downloadOverlay').style.display = 'none';
};

const showOverlay=()=>{document.getElementById("downloadOverlay").style.display="flex"},closeOverlay=()=>{document.getElementById("downloadOverlay").style.display="none"};document.getElementById("downloadOverlay").addEventListener("click",function(e){e.target===this&&closeOverlay()});const lightbox=document.getElementById("imageLightbox"),lightboxImage=lightbox.querySelector(".lightbox-image"),lightboxCaption=lightbox.querySelector(".lightbox-caption"),lightboxClose=lightbox.querySelector(".lightbox-close"),lightboxPrev=lightbox.querySelector(".lightbox-prev"),lightboxNext=lightbox.querySelector(".lightbox-next"),lightboxLoading=lightbox.querySelector(".lightbox-loading"),blogImages=document.querySelectorAll(".blog-image");let currentImageIndex=0;function showLightbox(e){lightboxLoading.style.display="block",lightboxImage.style.display="none",lightboxImage.src=e.src,lightboxCaption.textContent=e.nextElementSibling?.textContent||e.alt,lightbox.style.display="flex",lightboxImage.onload=()=>{lightboxLoading.style.display="none",lightboxImage.style.display="block"},updateNavigation()}function closeLightbox(){lightbox.style.display="none",lightboxImage.src=""}function showPrevImage(){currentImageIndex>0&&(currentImageIndex--,showLightbox(blogImages[currentImageIndex]))}function showNextImage(){currentImageIndex<blogImages.length-1&&(currentImageIndex++,showLightbox(blogImages[currentImageIndex]))}function updateNavigation(){lightboxPrev.style.display=currentImageIndex>0?"block":"none",lightboxNext.style.display=currentImageIndex<blogImages.length-1?"block":"none"}blogImages.forEach((e,t)=>{e.style.cursor="zoom-in",e.addEventListener("click",()=>{currentImageIndex=t,showLightbox(e)})}),lightboxClose.addEventListener("click",closeLightbox),lightbox.addEventListener("click",e=>{e.target===lightbox&&closeLightbox()}),lightboxPrev.addEventListener("click",showPrevImage),lightboxNext.addEventListener("click",showNextImage),document.addEventListener("keydown",e=>{"flex"===lightbox.style.display&&("Escape"===e.key&&closeLightbox(),"ArrowLeft"===e.key&&showPrevImage(),"ArrowRight"===e.key&&showNextImage())});let touchStartX=0,touchEndX=0;function handleSwipe(){const e=touchEndX-touchStartX;Math.abs(e)>50&&(e>0?showPrevImage():showNextImage())}lightbox.addEventListener("touchstart",e=>{touchStartX=e.changedTouches[0].screenX}),lightbox.addEventListener("touchend",e=>{touchEndX=e.changedTouches[0].screenX,handleSwipe()});const imageObserver=new IntersectionObserver((e,t)=>{e.forEach(e=>{if(e.isIntersecting){const n=e.target;!n.src&&n.dataset.src&&(n.src=n.dataset.src,n.classList.add("loading")),t.unobserve(n)}})},{rootMargin:"50px 0px",threshold:.01});function handleImageLoad(e){e.classList.remove("loading");const t=e.previousElementSibling;t&&t.classList.contains("image-placeholder")&&(t.style.display="none")}document.querySelectorAll(".blog-image").forEach(e=>{e.src&&e.classList.add("loading"),imageObserver.observe(e)}),document.querySelectorAll(".blog-image").forEach(e=>{e.complete?handleImageLoad(e):e.addEventListener("load",()=>handleImageLoad(e))});const searchInput=document.getElementById("searchInput"),searchClear=document.getElementById("searchClear"),searchResults=document.getElementById("searchResults"),blogPosts=document.querySelectorAll(".blog-post");let searchTimeout;const categoryFilter = document.getElementById('categoryFilter');
const dateFilter = document.getElementById('dateFilter');
const contentFilter = document.getElementById('contentFilter');
const resetFiltersBtn = document.getElementById('resetFilters');
const activeFilters = document.getElementById('activeFilters');

function performSearch(){
    const e=document.querySelector(".search-input").value.toLowerCase(),t=document.getElementById("categoryFilter").value,n=document.getElementById("dateFilter").value,a=document.getElementById("contentFilter").value,r=document.querySelectorAll(".blog-post");let l=0;r.forEach(r=>{const s=r.textContent.toLowerCase(),i=r.dataset.category,o=new Date(r.dataset.date),c=r.querySelector(".blog-image")!==null;let d=!0;if(e&&!s.includes(e)&&(d=!1),t&&i!==t&&(d=!1),n&&!isWithinDateRange(o,n)&&(d=!1),a){const e="with-images"===a&&!c||"without-images"===a&&c;e&&(d=!1)}r.classList.toggle("hidden",!d),d&&l++}),updateSearchResults(l),updateActiveFilters()}

function isWithinDateRange(e,t){
    const n=new Date,a=new Date;switch(t){case"last-7-days":return a.setDate(n.getDate()-7),e>=a;case"last-30-days":return a.setDate(n.getDate()-30),e>=a;case"last-3-months":return a.setMonth(n.getMonth()-3),e>=a;case"last-year":return a.setFullYear(n.getFullYear()-1),e>=a;default:return!0}
}

function updateActiveFilters(){
    const e=document.querySelector(".active-filters");e.innerHTML="";const t=[];document.querySelector(".search-input").value&&t.push({type:"search",value:document.querySelector(".search-input").value}),document.getElementById("categoryFilter").value&&t.push({type:"category",value:getCategoryLabel(document.getElementById("categoryFilter").value)}),document.getElementById("dateFilter").value&&t.push({type:"date",value:document.getElementById("dateFilter").value}),document.getElementById("contentFilter").value&&t.push({type:"content",value:document.getElementById("contentFilter").value}),t.forEach(t=>{const n=document.createElement("span");n.className="active-filter",n.innerHTML=`${t.value} <button onclick="clearFilter('${t.type}')">&times;</button>`,e.appendChild(n)})
}

function clearFilter(e){
    switch(e){case"search":document.querySelector(".search-input").value="",document.querySelector(".search-clear").style.display="none";break;case"category":document.getElementById("categoryFilter").value="";break;case"date":document.getElementById("dateFilter").value="";break;case"content":document.getElementById("contentFilter").value=""}performSearch()
}

function getCategoryLabel(e){
    const t={events:"Events",projects:"Projects",development:"Development",ai:"AI & Machine Learning",gauntlet:"Gauntlet Journey"};return t[e]||e
}

function updateSearchResults(count) {
    let message = '';
    if (count === 0) {
        message = 'No posts found';
    } else {
        message = `Found ${count} ${count === 1 ? 'post' : 'posts'}`;
    }
    const query = searchInput.value.toLowerCase().trim();
    const category = categoryFilter.value;
    const dateRange = parseInt(dateFilter.value) || 0;
    const contentType = contentFilter.value;
    let matchCount = 0;

    // Show/hide clear button
    searchClear.style.display = query ? 'block' : 'none';

    // Update active filters display
    updateActiveFilters(category, dateRange, contentType);

    blogPosts.forEach(post => {
        const title = post.querySelector('h2').textContent.toLowerCase();
        const content = post.textContent.toLowerCase();
        const postDate = new Date(post.querySelector('.post-date').textContent);
        
        // Check if post matches all filters
        const matchesQuery = !query || title.includes(query) || content.includes(query);
        const matchesCategory = !category || post.dataset.category === category;
        const matchesDate = !dateRange || isWithinDateRange(postDate, dateRange);
        const matchesContentType = !contentType || matchesContentFilter(post, contentType);

        const isMatch = matchesQuery && matchesCategory && matchesDate && matchesContentType;
        post.classList.toggle('hidden', !isMatch);

        if (isMatch) {
            matchCount++;
            if (query) {
                highlightMatches(post, query);
            } else {
                removeHighlights(post);
            }
        } else {
            removeHighlights(post);
        }
    });

    // Update results message
    updateResultsMessage(matchCount, query, category, dateRange, contentType);
}

function isWithinDateRange(postDate, days) {
    if (!days) return true;
    const now = new Date();
    const diffTime = Math.abs(now - postDate);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays <= days;
}

function matchesContentFilter(post, type) {
    switch (type) {
        case 'images':
            return post.querySelector('.blog-image') !== null;
        case 'lists':
            return post.querySelector('ul, ol') !== null;
        case 'code':
            return post.querySelector('pre, code') !== null;
        default:
            return true;
    }
}

function updateActiveFilters(category, dateRange, contentType) {
    activeFilters.innerHTML = '';
    
    if (category) {
        addActiveFilter('Category', categoryFilter.options[categoryFilter.selectedIndex].text);
    }
    if (dateRange) {
        addActiveFilter('Time', dateFilter.options[dateFilter.selectedIndex].text);
    }
    if (contentType) {
        addActiveFilter('Content', contentFilter.options[contentFilter.selectedIndex].text);
    }
}

function addActiveFilter(type, value) {
    const filter = document.createElement('div');
    filter.className = 'active-filter';
    filter.innerHTML = `
        ${type}: ${value}
        <button onclick="clearFilter('${type.toLowerCase()}')" aria-label="Remove ${type} filter">✕</button>
    `;
    activeFilters.appendChild(filter);
}

function clearFilter(type) {
    switch (type) {
        case 'category':
            categoryFilter.value = '';
            break;
        case 'time':
            dateFilter.value = '';
            break;
        case 'content':
            contentFilter.value = '';
            break;
    }
    performSearch();
}

function updateResultsMessage(count, query, category, dateRange, contentType) {
    let message = '';
    if (count === 0) {
        message = 'No posts found';
    } else {
        message = `Found ${count} ${count === 1 ? 'post' : 'posts'}`;
        if (query) message += ` matching "${query}"`;
        if (category || dateRange || contentType) {
            message += ' with selected filters';
        }
    }
    searchResults.textContent = message;
}

function resetFilters() {
    categoryFilter.value = '';
    dateFilter.value = '';
    contentFilter.value = '';
    searchInput.value = '';
    performSearch();
}

// Event listeners for filters
categoryFilter.addEventListener('change', performSearch);
dateFilter.addEventListener('change', performSearch);
contentFilter.addEventListener('change', performSearch);
resetFiltersBtn.addEventListener('click', resetFilters);

searchInput.addEventListener("input",()=>{clearTimeout(searchTimeout),searchTimeout=setTimeout(performSearch,300)}),searchClear.addEventListener("click",()=>{searchInput.value="",performSearch(),searchInput.focus()}),searchInput.addEventListener("keydown",e=>{"Escape"===e.key&&(searchInput.value="",performSearch(),searchInput.blur())});const backToTop=document.getElementById("backToTop");window.addEventListener("scroll",()=>{window.scrollY>500?backToTop.classList.add("visible"):backToTop.classList.remove("visible")}),backToTop.addEventListener("click",()=>{window.scrollTo({top:0,behavior:"smooth"})});var disqus_config=function(){this.page.url=window.location.href,this.page.identifier=window.location.pathname};!function(){var e=document,t=e.createElement("script");t.src="https://ai-engineer-journey.disqus.com/embed.js",t.setAttribute("data-timestamp",+new Date),(e.head||e.body).appendChild(t)}();function loadCommentCounts(){var e=document,t=e.createElement("script");t.src="https://ai-engineer-journey.disqus.com/count.js",t.id="dsq-count-scr",(e.head||e.body).appendChild(t)}window.addEventListener("load",loadCommentCounts);let currentPage=1;const postsContainer=document.getElementById("posts-container"),loadingIndicator=document.getElementById("loading-indicator"),loadMoreBtn=document.getElementById("load-more");let isLoading=!1;async function loadPosts(e=1){if(!isLoading){isLoading=!0,loadingIndicator.style.display="block",loadMoreBtn.style.display="none";try{const t=await fetch(`/data/blog-posts.json?page=${e}`);if(!t.ok)throw new Error("Failed to load posts");const n=await t.json();n.posts.forEach(e=>{const t=createPostElement(e);postsContainer.appendChild(t)}),currentPage=e,currentPage*n.pagination.per_page<n.pagination.total_posts&&(loadMoreBtn.style.display="block"),initializeLightboxForNewImages()}catch(e){showError("Failed to load posts. Please try again later."),console.error("Error loading posts:",e)}finally{isLoading=!1,loadingIndicator.style.display="none"}}}function createPostElement(e){const t=document.createElement("article");t.className="blog-post",t.dataset.category=e.category;let n="";e.images&&e.images.length>0&&(n=`<div class="blog-images">${e.images.map(e=>`<div class="blog-image-container"><div class="image-placeholder">Loading image...</div><img src="${e.src}" alt="${e.alt}" class="blog-image loading" loading="lazy" width="800" height="600" onload="this.classList.remove('loading'); this.previousElementSibling.style.display='none';"><div class="image-caption">${e.caption}</div></div>`).join("")}</div>`);let o="";return e.sections&&e.sections.length>0&&(o=e.sections.map(e=>`<h3>${e.title}</h3><p>${e.content}</p>${e.list?`<ul>${e.list.map(e=>`<li>${e}</li>`).join("")}</ul>`:""}`).join("")),t.innerHTML=`<h2>${e.title}</h2><div class="post-meta"><span class="post-date">${e.date}</span><span class="post-category">${getCategoryLabel(e.category)}</span></div><p>${e.content}</p>${n}${o}<div class="comments-section"><h3>Comments</h3><div id="disqus_thread"></div></div>`,t}function getCategoryLabel(e){const t={development:"💻 Development",ai:"🤖 AI & ML",gauntlet:"⚡ Gauntlet Program",projects:"🚀 Projects",events:"📅 Events & Updates"};return t[e]||e}function showError(e){const t=document.createElement("div");t.className="error-message",t.textContent=e,postsContainer.appendChild(t),setTimeout(()=>t.remove(),5e3)}function initializeLightboxForNewImages(){postsContainer.querySelectorAll(".blog-image:not([data-lightbox-initialized])").forEach((e,t)=>{e.style.cursor="zoom-in",e.addEventListener("click",()=>{currentImageIndex=Array.from(blogImages).indexOf(e),showLightbox(e)}),e.setAttribute("data-lightbox-initialized","true")})}loadMoreBtn.addEventListener("click",()=>loadPosts(currentPage+1)),document.addEventListener("DOMContentLoaded",()=>loadPosts()); 